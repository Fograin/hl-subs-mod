#############################################################################
# Half-Life: Subtitles Mod (CL) Makefile for GNU Make
#############################################################################

BUILD_MOD_NAME := sm_valve
BUILD_LIB_DEST := cl_dlls
BUILD_LIB_NAME := client

# Leave it empty if custom libraries runtime location is the executeble's
# dir, otherwise specify their relative path.
# E.g., specify 'bin' (without quotes) if libraries will be located there.
LIBS_RT_R_DIR := 

ifneq ("$(LIBS_RT_R_DIR)", "")
	LIBS_RT_R_DIR := $(shell dirname "$(LIBS_RT_R_DIR)/*")/
endif

MAKEFILE_DIR  ?= $(CURDIR)
LIBS_LINK_DIR := $(shell dirname "$(MAKEFILE_DIR)/$(LIBS_RT_R_DIR)*")
BUILD_DST_DIR := $(BUILD_DST_DIR)/$(BUILD_MOD_NAME)/$(BUILD_LIB_DEST)
BUILD_OBJ_DIR := $(BUILD_OBJ_DIR)/$(BUILD_MOD_NAME)_$(BUILD_LIB_NAME)
BUILD_MAP_DST := $(BUILD_OBJ_DIR)/$(BUILD_LIB_NAME).$(SHLIBEXT).map

BACKUP_SUFFIX ?= .orig

#############################################################################

CMN_FLAGS := -DCLIENT_DLL \
             -DCLIENT_WEAPONS \
             -DDISABLE_JUMP_ORIGIN \
             -DDISABLE_VEC_ORIGIN

CFLAGS := $(CFLAGS) \
          $(SHLIBCFLAGS) \
          $(CMN_FLAGS)

CXXFLAGS := $(CXXFLAGS) \
            $(SHLIBCXXFLAGS) \
            $(CMN_FLAGS)

SHLIBLDFLAGS := $(SHLIBLDFLAGS)

# Store library name as "name.extension" without prepended $(BUILD_DST_DIR) path
ifeq ("$(OS)", "Linux")
	SHLIBLDFLAGS += -Wl,-soname,"$(BUILD_LIB_NAME).$(SHLIBEXT)"
else
ifeq ("$(OS)", "Darwin")
	SHLIBLDFLAGS += -Wl,-dylib_install_name,"@rpath/$(BUILD_LIB_NAME).$(SHLIBEXT)"
endif
endif

INCLUDEDIRS := -I"$(SV_BASE_SRC_DIR)" \
               -I"$(CL_BASE_SRC_DIR)" \
               -I"$(PUBLIC_SRC_DIR)" \
               -I"$(COMMON_SRC_DIR)" \
               -I"$(PM_SHARED_SRC_DIR)" \
               -I"$(ENGINE_SRC_DIR)" \
               -I"$(UTILS_VGUI_SRC_DIR)" \
               -I"$(GAME_SHARED_SRC_DIR)" \
               -I"$(EXTERNAL_SRC_DIR)" \
               -I"$(SM_BASE_SRC_DIR)"

ifeq ("$(OS)", "Linux")
	ifeq ("$(BUILD_CFG)", "release")
		SDL2_LIB_NAME := libSDL2-2.0.so.0
		VGUI_LIB_NAME := vgui.so
	else
		SDL2_LIB_NAME := libSDL2-2.0.so.0.dbg
		VGUI_LIB_NAME := vgui.so
	endif
	CUSTOM_LIBS := $(SDL2_LIB_NAME) $(VGUI_LIB_NAME)
else
ifeq ("$(OS)", "Darwin")
	ifeq ("$(BUILD_CFG)", "release")
		SDL2_LIB_NAME := libSDL2-2.0.0.dylib
		VGUI_LIB_NAME := vgui.dylib
	else
		SDL2_LIB_NAME := libSDL2-2.0.0.dylib
		VGUI_LIB_NAME := vgui.dylib
	endif
	CUSTOM_LIBS := $(SDL2_LIB_NAME) $(VGUI_LIB_NAME)
endif
endif

LDFLAGS := $(LDFLAGS) -Wl,-Map="$(BUILD_MAP_DST)"
LDLIBS  := $(LDLIBS)

ifneq ("$(CUSTOM_LIBS)", "")
	LDFLAGS += -L:"$(LIBS_BASE_DIR)"
	LDLIBS  += $(foreach LIB_NAME,$(CUSTOM_LIBS),-l:"$(LIBS_RT_R_DIR)$(LIB_NAME)")
	ifeq ("$(OS)", "Darwin")
		LDFLAGS += -framework Carbon $(foreach LIB_NAME,$(CUSTOM_LIBS),-Wl,-dylib_file,"@loader_path/$(LIBS_RT_R_DIR)$(LIB_NAME)":"$(LIBS_BASE_DIR)/$(LIB_NAME)")
	endif
endif

LDFLAGS += $(SHLIBLDFLAGS)

#############################################################################

MAKE_OBJS := \
	$(BUILD_OBJ_DIR)/cl_dll/ev_hldm.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_spectator.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud.o \
	$(BUILD_OBJ_DIR)/cl_dll/inputw32.o \
	$(BUILD_OBJ_DIR)/cl_dll/ammo.o \
	$(BUILD_OBJ_DIR)/cl_dll/ammo_secondary.o \
	$(BUILD_OBJ_DIR)/cl_dll/ammohistory.o \
	$(BUILD_OBJ_DIR)/cl_dll/battery.o \
	$(BUILD_OBJ_DIR)/cl_dll/cdll_int.o \
	$(BUILD_OBJ_DIR)/cl_dll/com_weapons.o \
	$(BUILD_OBJ_DIR)/cl_dll/death.o \
	$(BUILD_OBJ_DIR)/cl_dll/demo.o \
	$(BUILD_OBJ_DIR)/cl_dll/entity.o \
	$(BUILD_OBJ_DIR)/cl_dll/ev_common.o \
	$(BUILD_OBJ_DIR)/cl_dll/events.o \
	$(BUILD_OBJ_DIR)/cl_dll/flashlight.o \
	$(BUILD_OBJ_DIR)/cl_dll/GameStudioModelRenderer.o \
	$(BUILD_OBJ_DIR)/cl_dll/geiger.o \
	$(BUILD_OBJ_DIR)/cl_dll/health.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_bench.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_benchtrace.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_msg.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_redraw.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_update.o \
	$(BUILD_OBJ_DIR)/cl_dll/in_camera.o \
	$(BUILD_OBJ_DIR)/cl_dll/input.o \
	$(BUILD_OBJ_DIR)/cl_dll/interpolation.o \
	$(BUILD_OBJ_DIR)/cl_dll/menu.o \
	$(BUILD_OBJ_DIR)/cl_dll/message.o \
	$(BUILD_OBJ_DIR)/cl_dll/saytext.o \
	$(BUILD_OBJ_DIR)/cl_dll/status_icons.o \
	$(BUILD_OBJ_DIR)/cl_dll/statusbar.o \
	$(BUILD_OBJ_DIR)/cl_dll/studio_util.o \
	$(BUILD_OBJ_DIR)/cl_dll/StudioModelRenderer.o \
	$(BUILD_OBJ_DIR)/cl_dll/text_message.o \
	$(BUILD_OBJ_DIR)/cl_dll/train.o \
	$(BUILD_OBJ_DIR)/cl_dll/tri.o \
	$(BUILD_OBJ_DIR)/cl_dll/util.o \
	$(BUILD_OBJ_DIR)/cl_dll/view.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_int.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_ClassMenu.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_ControlConfigPanel.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_CustomObjects.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_MOTDWindow.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_SchemeManager.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_ScorePanel.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_ServerBrowser.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_TeamFortressViewport.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_SpectatorPanel.o \
	$(BUILD_OBJ_DIR)/cl_dll/vgui_teammenu.o \
	$(BUILD_OBJ_DIR)/cl_dll/voice_status.o \
	$(BUILD_OBJ_DIR)/cl_dll/hud_servers.o \
	$(BUILD_OBJ_DIR)/cl_dll/hl/hl_baseentity.o \
	$(BUILD_OBJ_DIR)/cl_dll/hl/hl_events.o \
	$(BUILD_OBJ_DIR)/cl_dll/hl/hl_objects.o \
	$(BUILD_OBJ_DIR)/cl_dll/hl/hl_weapons.o \
	$(BUILD_OBJ_DIR)/common/parsemsg.o \
	$(BUILD_OBJ_DIR)/dlls/crossbow.o \
	$(BUILD_OBJ_DIR)/dlls/crowbar.o \
	$(BUILD_OBJ_DIR)/dlls/egon.o \
	$(BUILD_OBJ_DIR)/dlls/gauss.o \
	$(BUILD_OBJ_DIR)/dlls/handgrenade.o \
	$(BUILD_OBJ_DIR)/dlls/hornetgun.o \
	$(BUILD_OBJ_DIR)/dlls/mp5.o \
	$(BUILD_OBJ_DIR)/dlls/python.o \
	$(BUILD_OBJ_DIR)/dlls/rpg.o \
	$(BUILD_OBJ_DIR)/dlls/satchel.o \
	$(BUILD_OBJ_DIR)/dlls/shotgun.o \
	$(BUILD_OBJ_DIR)/dlls/squeakgrenade.o \
	$(BUILD_OBJ_DIR)/dlls/tripmine.o \
	$(BUILD_OBJ_DIR)/dlls/wpn_shared/hl_wpn_glock.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_checkbutton2.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_grid.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_helpers.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_listbox.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_loadtga.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_scrollbar2.o \
	$(BUILD_OBJ_DIR)/game_shared/vgui_slider2.o \
	$(BUILD_OBJ_DIR)/game_shared/voice_banmgr.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_debug.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_shared.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_math.o \
	$(BUILD_OBJ_DIR)/public/interface.o \
	$(BUILD_OBJ_DIR)/subs_mod/sm_main.o \
	$(BUILD_OBJ_DIR)/subs_mod/sm_util_snd.o \
	$(BUILD_OBJ_DIR)/subs_mod/sm_util_txt.o

#############################################################################

.NOTPARALLEL:
.ONESHELL:

all:   build
clean: libs_clean dirs_clean

build:     compile link
compile:   $(MAKE_OBJS)
link:      pre_link $(BUILD_LIB_NAME).$(SHLIBEXT) post_link
pre_link:  libs_copy
post_link: libs_clean

$(BUILD_LIB_NAME).$(SHLIBEXT):
	@mkdir -p "$(BUILD_DST_DIR)"
	$(LINK) -o "$(BUILD_DST_DIR)/$@" $(MAKE_OBJS) $(LDFLAGS) $(LDLIBS)

$(BUILD_OBJ_DIR)/%.o: $(BUILD_SRC_DIR)/%.c
	@mkdir -p "$(shell dirname "$@")"
	$(CC)  $(INCLUDEDIRS) $(CFLAGS)   -o "$@" -c "$<"

$(BUILD_OBJ_DIR)/%.o: $(BUILD_SRC_DIR)/%.cpp
	@mkdir -p "$(shell dirname "$@")"
	$(CXX) $(INCLUDEDIRS) $(CXXFLAGS) -o "$@" -c "$<"

libs_copy:
	mkdir -p "$(LIBS_LINK_DIR)"
	$(foreach CUSTOM_LIB,$(CUSTOM_LIBS),cp -bfsS "$(BACKUP_SUFFIX)" "$(MAKEFILE_DIR)/$(LIBS_BASE_DIR)/$(CUSTOM_LIB)" "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)" 2>/dev/null || cp -bfS "$(BACKUP_SUFFIX)" "$(MAKEFILE_DIR)/$(LIBS_BASE_DIR)/$(CUSTOM_LIB)" "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)";)

libs_clean:
	$(foreach CUSTOM_LIB,$(CUSTOM_LIBS),if [ -e "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)$(BACKUP_SUFFIX)" ]; then mv -f "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)$(BACKUP_SUFFIX)" "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)" 2>/dev/null || :; else rm -f "$(LIBS_LINK_DIR)/$(CUSTOM_LIB)" 2>/dev/null || :; fi;)
	-rmdir "$(LIBS_LINK_DIR)"

dirs_clean:
	-rm -rf "$(MAKEFILE_DIR)/$(BUILD_OBJ_DIR)"

#############################################################################
