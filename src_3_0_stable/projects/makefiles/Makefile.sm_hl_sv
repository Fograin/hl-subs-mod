#############################################################################
# Half-Life: Subtitles Mod (SV) Makefile for GNU Make
#############################################################################

BUILD_MOD_NAME := sm_valve
BUILD_LIB_DEST := dlls
BUILD_LIB_NAME := hl

MAKEFILE_DIR  ?= $(CURDIR)
BUILD_DST_DIR := $(BUILD_DST_DIR)/$(BUILD_MOD_NAME)/$(BUILD_LIB_DEST)
BUILD_OBJ_DIR := $(BUILD_OBJ_DIR)/$(BUILD_MOD_NAME)_$(BUILD_LIB_NAME)
BUILD_MAP_DST := $(BUILD_OBJ_DIR)/$(BUILD_LIB_NAME).$(SHLIBEXT).map

#############################################################################

CMN_FLAGS := -DCLIENT_WEAPONS

CFLAGS := $(CFLAGS) \
          $(SHLIBCFLAGS) \
          $(CMN_FLAGS)

CXXFLAGS := $(CXXFLAGS) \
            $(SHLIBCXXFLAGS) \
            $(CMN_FLAGS)

SHLIBLDFLAGS := $(SHLIBLDFLAGS)

# Store library name as "name.extension" without prepended $(BUILD_DST_DIR) path
ifeq ("$(OS)", "Linux")
	SHLIBLDFLAGS += -Wl,-soname,"$(BUILD_LIB_NAME).$(SHLIBEXT)"
else
ifeq ("$(OS)", "Darwin")
	SHLIBLDFLAGS += -Wl,-dylib_install_name,"@rpath/$(BUILD_LIB_NAME).$(SHLIBEXT)"
endif
endif

LDFLAGS := $(LDFLAGS) -Wl,-Map="$(BUILD_MAP_DST)" $(SHLIBLDFLAGS)
LDLIBS  := $(LDLIBS)

INCLUDEDIRS := -I"$(SV_BASE_SRC_DIR)" \
               -I"$(ENGINE_SRC_DIR)" \
               -I"$(COMMON_SRC_DIR)" \
               -I"$(PM_SHARED_SRC_DIR)" \
               -I"$(GAME_SHARED_SRC_DIR)" \
               -I"$(PUBLIC_SRC_DIR)" \
               -I"$(SM_BASE_SRC_DIR)"

#############################################################################

MAKE_OBJS := \
	$(BUILD_OBJ_DIR)/dlls/aflock.o \
	$(BUILD_OBJ_DIR)/dlls/agrunt.o \
	$(BUILD_OBJ_DIR)/dlls/airtank.o \
	$(BUILD_OBJ_DIR)/dlls/animating.o \
	$(BUILD_OBJ_DIR)/dlls/animation.o \
	$(BUILD_OBJ_DIR)/dlls/apache.o \
	$(BUILD_OBJ_DIR)/dlls/barnacle.o \
	$(BUILD_OBJ_DIR)/dlls/barney.o \
	$(BUILD_OBJ_DIR)/dlls/bigmomma.o \
	$(BUILD_OBJ_DIR)/dlls/bloater.o \
	$(BUILD_OBJ_DIR)/dlls/bmodels.o \
	$(BUILD_OBJ_DIR)/dlls/bullsquid.o \
	$(BUILD_OBJ_DIR)/dlls/buttons.o \
	$(BUILD_OBJ_DIR)/dlls/cbase.o \
	$(BUILD_OBJ_DIR)/dlls/client.o \
	$(BUILD_OBJ_DIR)/dlls/combat.o \
	$(BUILD_OBJ_DIR)/dlls/controller.o \
	$(BUILD_OBJ_DIR)/dlls/crossbow.o \
	$(BUILD_OBJ_DIR)/dlls/crowbar.o \
	$(BUILD_OBJ_DIR)/dlls/defaultai.o \
	$(BUILD_OBJ_DIR)/dlls/doors.o \
	$(BUILD_OBJ_DIR)/dlls/effects.o \
	$(BUILD_OBJ_DIR)/dlls/egon.o \
	$(BUILD_OBJ_DIR)/dlls/explode.o \
	$(BUILD_OBJ_DIR)/dlls/flyingmonster.o \
	$(BUILD_OBJ_DIR)/dlls/func_break.o \
	$(BUILD_OBJ_DIR)/dlls/func_tank.o \
	$(BUILD_OBJ_DIR)/dlls/game.o \
	$(BUILD_OBJ_DIR)/dlls/gamerules.o \
	$(BUILD_OBJ_DIR)/dlls/gargantua.o \
	$(BUILD_OBJ_DIR)/dlls/gauss.o \
	$(BUILD_OBJ_DIR)/dlls/genericmonster.o \
	$(BUILD_OBJ_DIR)/dlls/ggrenade.o \
	$(BUILD_OBJ_DIR)/dlls/globals.o \
	$(BUILD_OBJ_DIR)/dlls/gman.o \
	$(BUILD_OBJ_DIR)/dlls/h_ai.o \
	$(BUILD_OBJ_DIR)/dlls/h_battery.o \
	$(BUILD_OBJ_DIR)/dlls/h_cycler.o \
	$(BUILD_OBJ_DIR)/dlls/h_export.o \
	$(BUILD_OBJ_DIR)/dlls/handgrenade.o \
	$(BUILD_OBJ_DIR)/dlls/hassassin.o \
	$(BUILD_OBJ_DIR)/dlls/headcrab.o \
	$(BUILD_OBJ_DIR)/dlls/healthkit.o \
	$(BUILD_OBJ_DIR)/dlls/hgrunt.o \
	$(BUILD_OBJ_DIR)/dlls/hornet.o \
	$(BUILD_OBJ_DIR)/dlls/hornetgun.o \
	$(BUILD_OBJ_DIR)/dlls/houndeye.o \
	$(BUILD_OBJ_DIR)/dlls/ichthyosaur.o \
	$(BUILD_OBJ_DIR)/dlls/islave.o \
	$(BUILD_OBJ_DIR)/dlls/items.o \
	$(BUILD_OBJ_DIR)/dlls/leech.o \
	$(BUILD_OBJ_DIR)/dlls/lights.o \
	$(BUILD_OBJ_DIR)/dlls/maprules.o \
	$(BUILD_OBJ_DIR)/dlls/monstermaker.o \
	$(BUILD_OBJ_DIR)/dlls/monsters.o \
	$(BUILD_OBJ_DIR)/dlls/monsterstate.o \
	$(BUILD_OBJ_DIR)/dlls/mortar.o \
	$(BUILD_OBJ_DIR)/dlls/mp5.o \
	$(BUILD_OBJ_DIR)/dlls/multiplay_gamerules.o \
	$(BUILD_OBJ_DIR)/dlls/nihilanth.o \
	$(BUILD_OBJ_DIR)/dlls/nodes.o \
	$(BUILD_OBJ_DIR)/dlls/observer.o \
	$(BUILD_OBJ_DIR)/dlls/osprey.o \
	$(BUILD_OBJ_DIR)/dlls/pathcorner.o \
	$(BUILD_OBJ_DIR)/dlls/plane.o \
	$(BUILD_OBJ_DIR)/dlls/plats.o \
	$(BUILD_OBJ_DIR)/dlls/player.o \
	$(BUILD_OBJ_DIR)/dlls/python.o \
	$(BUILD_OBJ_DIR)/dlls/rat.o \
	$(BUILD_OBJ_DIR)/dlls/roach.o \
	$(BUILD_OBJ_DIR)/dlls/rpg.o \
	$(BUILD_OBJ_DIR)/dlls/satchel.o \
	$(BUILD_OBJ_DIR)/dlls/schedule.o \
	$(BUILD_OBJ_DIR)/dlls/scientist.o \
	$(BUILD_OBJ_DIR)/dlls/scripted.o \
	$(BUILD_OBJ_DIR)/dlls/singleplay_gamerules.o \
	$(BUILD_OBJ_DIR)/dlls/shotgun.o \
	$(BUILD_OBJ_DIR)/dlls/skill.o \
	$(BUILD_OBJ_DIR)/dlls/sound.o \
	$(BUILD_OBJ_DIR)/dlls/soundent.o \
	$(BUILD_OBJ_DIR)/dlls/spectator.o \
	$(BUILD_OBJ_DIR)/dlls/squadmonster.o \
	$(BUILD_OBJ_DIR)/dlls/squeakgrenade.o \
	$(BUILD_OBJ_DIR)/dlls/subs.o \
	$(BUILD_OBJ_DIR)/dlls/talkmonster.o \
	$(BUILD_OBJ_DIR)/dlls/teamplay_gamerules.o \
	$(BUILD_OBJ_DIR)/dlls/tentacle.o \
	$(BUILD_OBJ_DIR)/dlls/triggers.o \
	$(BUILD_OBJ_DIR)/dlls/tripmine.o \
	$(BUILD_OBJ_DIR)/dlls/turret.o \
	$(BUILD_OBJ_DIR)/dlls/util.o \
	$(BUILD_OBJ_DIR)/dlls/weapons.o \
	$(BUILD_OBJ_DIR)/dlls/world.o \
	$(BUILD_OBJ_DIR)/dlls/xen.o \
	$(BUILD_OBJ_DIR)/dlls/zombie.o \
	$(BUILD_OBJ_DIR)/dlls/wpn_shared/hl_wpn_glock.o \
	$(BUILD_OBJ_DIR)/game_shared/voice_gamemgr.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_debug.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_math.o \
	$(BUILD_OBJ_DIR)/pm_shared/pm_shared.o \
	$(BUILD_OBJ_DIR)/subs_mod/sm_util_snd.o \
	$(BUILD_OBJ_DIR)/subs_mod/sm_util_txt.o

#############################################################################

.NOTPARALLEL:
.ONESHELL:

all:   build
clean: dirs_clean

build:   compile link
compile: $(MAKE_OBJS)
link:    $(BUILD_LIB_NAME).$(SHLIBEXT)

$(BUILD_LIB_NAME).$(SHLIBEXT):
	@mkdir -p "$(BUILD_DST_DIR)"
	$(LINK) -o "$(BUILD_DST_DIR)/$@" $(MAKE_OBJS) $(LDFLAGS) $(LDLIBS)

$(BUILD_OBJ_DIR)/%.o: $(BUILD_SRC_DIR)/%.c
	@mkdir -p "$(shell dirname "$@")"
	$(CC)  $(INCLUDEDIRS) $(CFLAGS)   -o "$@" -c "$<"

$(BUILD_OBJ_DIR)/%.o: $(BUILD_SRC_DIR)/%.cpp
	@mkdir -p "$(shell dirname "$@")"
	$(CXX) $(INCLUDEDIRS) $(CXXFLAGS) -o "$@" -c "$<"

dirs_clean:
	-rm -rf "$(MAKEFILE_DIR)/$(BUILD_OBJ_DIR)"

#############################################################################
